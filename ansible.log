2018-07-04 00:33:44,841 p=16631 u=ashok |  ERROR! the playbook: site.yml could not be found
2018-07-04 00:37:07,422 p=17668 u=ashok |  ERROR! the playbook: site.yml could not be found
2018-07-04 00:44:13,414 p=30922 u=ashok |   [WARNING]: Unable to parse /home/ashok/development/ansible2/hosts as an inventory source

2018-07-04 00:44:13,414 p=30922 u=ashok |   [WARNING]: No inventory was parsed, only implicit localhost is available

2018-07-04 00:44:13,415 p=30922 u=ashok |   [WARNING]: Could not match supplied host pattern, ignoring: all

2018-07-04 00:44:13,415 p=30922 u=ashok |   [WARNING]: provided hosts list is empty, only localhost is available

2018-07-04 00:44:13,430 p=30922 u=ashok |  ERROR! the role 'hxpro.nginx' was not found in /home/ashok/development/ansible2/roles:/home/ashok/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles:/home/ashok/development/ansible2

The error appears to have been in '/home/ashok/development/ansible2/yumrepos.yml': line 6, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
    - role: hxpro.nginx
      ^ here

2018-07-04 00:46:09,227 p=32035 u=ashok |   [WARNING]: Unable to parse /home/ashok/development/ansible2/hosts as an inventory source

2018-07-04 00:46:09,227 p=32035 u=ashok |   [WARNING]: No inventory was parsed, only implicit localhost is available

2018-07-04 00:46:09,228 p=32035 u=ashok |   [WARNING]: Could not match supplied host pattern, ignoring: all

2018-07-04 00:46:09,228 p=32035 u=ashok |   [WARNING]: provided hosts list is empty, only localhost is available

2018-07-04 00:46:09,243 p=32035 u=ashok |  ERROR! the role 'hxpro.nginx' was not found in /home/ashok/development/ansible2/roles:/home/ashok/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles:/home/ashok/development/ansible2

The error appears to have been in '/home/ashok/development/ansible2/yumrepos.yml': line 6, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
    - role: hxpro.nginx
      ^ here

2018-07-04 00:49:28,452 p=471 u=ashok |   [WARNING]: Unable to parse /home/ashok/development/ansible2/hosts as an inventory source

2018-07-04 00:49:28,452 p=471 u=ashok |   [WARNING]: No inventory was parsed, only implicit localhost is available

2018-07-04 00:49:28,453 p=471 u=ashok |   [WARNING]: Could not match supplied host pattern, ignoring: all

2018-07-04 00:49:28,453 p=471 u=ashok |   [WARNING]: provided hosts list is empty, only localhost is available

2018-07-04 00:49:28,468 p=471 u=ashok |  ERROR! the role 'hxpro.nginx' was not found in /home/ashok/development/ansible2/roles:/home/ashok/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles:/home/ashok/development/ansible2

The error appears to have been in '/home/ashok/development/ansible2/yumrepos.yml': line 6, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
    - role: hxpro.nginx
      ^ here

2018-07-04 01:03:02,864 p=10881 u=ashok |  ERROR! the role 'hxpro.nginx' was not found in /home/ashok/development/ansible2/roles:/home/ashok/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles:/home/ashok/development/ansible2

The error appears to have been in '/home/ashok/development/ansible2/yumrepos.yml': line 6, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
    - role: hxpro.nginx
      ^ here

2018-07-04 01:03:30,286 p=11078 u=ashok |  deployserver-ashok | SUCCESS => {
    "changed": false, 
    "failed": false, 
    "ping": "pong"
}
2018-07-04 01:03:55,309 p=11266 u=ashok |  deployserver-ashok | SUCCESS | rc=0 >>


2018-07-04 01:09:48,448 p=15394 u=ashok |  ERROR! the role 'hxpro.nginx' was not found in /home/ashok/development/ansible2/roles:/home/ashok/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles:/home/ashok/development/ansible2

The error appears to have been in '/home/ashok/development/ansible2/yumrepos.yml': line 6, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
    - role: hxpro.nginx
      ^ here

2018-07-04 01:13:45,193 p=17058 u=ashok |   [WARNING]: - requirements.yml was NOT installed successfully: the file downloaded was not a tar.gz

2018-07-04 01:13:45,193 p=17058 u=ashok |  ERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.
2018-07-04 01:14:19,993 p=17293 u=ashok |  - downloading role 'paloaltonetworks', owned by PaloAltoNetworks
2018-07-04 01:14:23,294 p=17293 u=ashok |  - downloading role from https://github.com/PaloAltoNetworks/ansible-role-paloaltonetworks/archive/V1.0.7.1.tar.gz
2018-07-04 01:14:23,702 p=17293 u=ashok |   [ERROR]: failed to download the file: Failed to validate the SSL certificate for github.com:443. Make sure your managed systems have a valid CA certificate installed. You can use validate_certs=False if
you do not need to confirm the servers identity but this is unsafe and not recommended. Paths checked for this platform: /etc/ssl/certs, /etc/pki/ca-trust/extracted/pem, /etc/pki/tls/certs, /usr/share
/ca-certificates/cacert.org, /etc/ansible. The exception msg was: ("bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')],)",).

2018-07-04 01:14:23,702 p=17293 u=ashok |   [WARNING]: - PaloAltoNetworks.paloaltonetworks was NOT installed successfully.

2018-07-04 01:14:23,703 p=17293 u=ashok |  ERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.
2018-07-04 01:24:43,608 p=23581 u=ashok |   [WARNING]: - requirements.yml was NOT installed successfully: the file downloaded was not a tar.gz

2018-07-04 01:24:43,608 p=23581 u=ashok |  ERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.
2018-07-04 01:25:04,448 p=23742 u=ashok |   [WARNING]: - requirements.yml was NOT installed successfully: the file downloaded was not a tar.gz

2018-07-04 01:25:04,449 p=23742 u=ashok |  ERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.
2018-07-04 01:25:34,282 p=23923 u=ashok |  - downloading role 'paloaltonetworks', owned by PaloAltoNetworks
2018-07-04 01:25:37,556 p=23923 u=ashok |  - downloading role from https://github.com/PaloAltoNetworks/ansible-role-paloaltonetworks/archive/V1.0.7.1.tar.gz
2018-07-04 01:25:37,974 p=23923 u=ashok |   [ERROR]: failed to download the file: Failed to validate the SSL certificate for github.com:443. Make sure your managed systems have a valid CA certificate installed. You can use validate_certs=False if
you do not need to confirm the servers identity but this is unsafe and not recommended. Paths checked for this platform: /etc/ssl/certs, /etc/pki/ca-trust/extracted/pem, /etc/pki/tls/certs, /usr/share
/ca-certificates/cacert.org, /etc/ansible. The exception msg was: ("bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')],)",).

2018-07-04 01:25:37,974 p=23923 u=ashok |   [WARNING]: - PaloAltoNetworks.paloaltonetworks was NOT installed successfully.

2018-07-04 01:25:37,974 p=23923 u=ashok |  ERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.
2018-07-04 01:29:17,475 p=25461 u=ashok |  - downloading role 'v', owned by 
2018-07-04 01:29:18,962 p=25461 u=ashok |   [WARNING]: - v was NOT installed successfully: Content has no field named 'owner'

2018-07-04 01:29:18,962 p=25461 u=ashok |  ERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.
2018-07-04 01:33:36,532 p=28561 u=ashok |  - downloading role 'paloaltonetworks', owned by PaloAltoNetworks
2018-07-04 01:33:39,799 p=28561 u=ashok |  - downloading role from https://github.com/PaloAltoNetworks/ansible-role-paloaltonetworks/archive/V1.0.7.1.tar.gz
2018-07-04 01:33:40,213 p=28561 u=ashok |   [ERROR]: failed to download the file: Failed to validate the SSL certificate for github.com:443. Make sure your managed systems have a valid CA certificate installed. You can use validate_certs=False if
you do not need to confirm the servers identity but this is unsafe and not recommended. Paths checked for this platform: /etc/ssl/certs, /etc/pki/ca-trust/extracted/pem, /etc/pki/tls/certs, /usr/share
/ca-certificates/cacert.org, /etc/ansible. The exception msg was: ("bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')],)",).

2018-07-04 01:33:40,214 p=28561 u=ashok |   [WARNING]: - PaloAltoNetworks.paloaltonetworks was NOT installed successfully.

2018-07-04 01:33:40,214 p=28561 u=ashok |  ERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.
2018-07-04 01:36:09,580 p=32626 u=ashok |  - downloading role 'paloaltonetworks', owned by PaloAltoNetworks
2018-07-04 01:36:12,847 p=32626 u=ashok |  - downloading role from https://github.com/PaloAltoNetworks/ansible-role-paloaltonetworks/archive/V1.0.7.1.tar.gz
2018-07-04 01:36:13,194 p=32626 u=ashok |   [ERROR]: failed to download the file: Failed to validate the SSL certificate for github.com:443. Make sure your managed systems have a valid CA certificate installed. You can use validate_certs=False if
you do not need to confirm the servers identity but this is unsafe and not recommended. Paths checked for this platform: /etc/ssl/certs, /etc/pki/ca-trust/extracted/pem, /etc/pki/tls/certs, /usr/share
/ca-certificates/cacert.org, /etc/ansible. The exception msg was: ("bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')],)",).

2018-07-04 01:36:13,195 p=32626 u=ashok |   [WARNING]: - PaloAltoNetworks.paloaltonetworks was NOT installed successfully.

2018-07-04 01:36:13,195 p=32626 u=ashok |  ERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.
2018-07-04 01:37:26,410 p=903 u=ashok |  - downloading role 'paloaltonetworks', owned by PaloAltoNetworks
2018-07-04 01:37:29,693 p=903 u=ashok |  - downloading role from https://github.com/PaloAltoNetworks/ansible-role-paloaltonetworks/archive/V1.0.7.1.tar.gz
2018-07-04 01:37:30,047 p=903 u=ashok |   [ERROR]: failed to download the file: Failed to validate the SSL certificate for github.com:443. Make sure your managed systems have a valid CA certificate installed. You can use validate_certs=False if
you do not need to confirm the servers identity but this is unsafe and not recommended. Paths checked for this platform: /etc/ssl/certs, /etc/pki/ca-trust/extracted/pem, /etc/pki/tls/certs, /usr/share
/ca-certificates/cacert.org, /etc/ansible. The exception msg was: ("bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')],)",).

2018-07-04 01:37:30,047 p=903 u=ashok |   [WARNING]: - PaloAltoNetworks.paloaltonetworks was NOT installed successfully.

2018-07-04 01:37:30,047 p=903 u=ashok |  ERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.
2018-07-04 01:44:23,899 p=5374 u=ashok |  ERROR! Missing required action
2018-07-04 01:47:30,055 p=7380 u=ashok |  - downloading role 'paloaltonetworks', owned by PaloAltoNetworks
2018-07-04 01:47:33,276 p=7380 u=ashok |  - downloading role from https://github.com/PaloAltoNetworks/ansible-role-paloaltonetworks/archive/V1.0.7.1.tar.gz
2018-07-04 01:47:33,696 p=7380 u=ashok |   [ERROR]: failed to download the file: Failed to validate the SSL certificate for github.com:443. Make sure your managed systems have a valid CA certificate installed. You can use validate_certs=False if
you do not need to confirm the servers identity but this is unsafe and not recommended. Paths checked for this platform: /etc/ssl/certs, /etc/pki/ca-trust/extracted/pem, /etc/pki/tls/certs, /usr/share
/ca-certificates/cacert.org, /etc/ansible. The exception msg was: ("bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')],)",).

2018-07-04 01:47:33,696 p=7380 u=ashok |   [WARNING]: - PaloAltoNetworks.paloaltonetworks was NOT installed successfully.

2018-07-04 01:47:33,696 p=7380 u=ashok |  ERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.
2018-07-04 01:50:57,725 p=16971 u=ashok |  - downloading role 'paloaltonetworks', owned by PaloAltoNetworks
2018-07-04 01:51:01,011 p=16971 u=ashok |  - downloading role from https://github.com/PaloAltoNetworks/ansible-role-paloaltonetworks/archive/V1.0.7.1.tar.gz
2018-07-04 01:51:01,364 p=16971 u=ashok |   [ERROR]: failed to download the file: Failed to validate the SSL certificate for github.com:443. Make sure your managed systems have a valid CA certificate installed. You can use validate_certs=False if
you do not need to confirm the servers identity but this is unsafe and not recommended. Paths checked for this platform: /etc/ssl/certs, /etc/pki/ca-trust/extracted/pem, /etc/pki/tls/certs, /usr/share
/ca-certificates/cacert.org, /etc/ansible. The exception msg was: ("bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')],)",).

2018-07-04 01:51:01,364 p=16971 u=ashok |   [WARNING]: - PaloAltoNetworks.paloaltonetworks was NOT installed successfully.

2018-07-04 01:51:01,365 p=16971 u=ashok |  ERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.
2018-07-04 01:52:53,110 p=18354 u=ashok |  - downloading role 'paloaltonetworks', owned by PaloAltoNetworks
2018-07-04 01:52:56,442 p=18354 u=ashok |  - downloading role from https://github.com/PaloAltoNetworks/ansible-role-paloaltonetworks/archive/V1.0.7.1.tar.gz
2018-07-04 01:52:56,791 p=18354 u=ashok |   [ERROR]: failed to download the file: Failed to validate the SSL certificate for github.com:443. Make sure your managed systems have a valid CA certificate installed. You can use validate_certs=False if
you do not need to confirm the servers identity but this is unsafe and not recommended. Paths checked for this platform: /etc/ssl/certs, /etc/pki/ca-trust/extracted/pem, /etc/pki/tls/certs, /usr/share
/ca-certificates/cacert.org, /etc/ansible. The exception msg was: ("bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')],)",).

2018-07-04 01:52:56,791 p=18354 u=ashok |   [WARNING]: - PaloAltoNetworks.paloaltonetworks was NOT installed successfully.

2018-07-04 01:52:56,792 p=18354 u=ashok |  ERROR! - you can use --ignore-errors to skip failed roles and finish processing the list.
2018-07-04 01:56:24,323 p=19712 u=ashok |  - downloading role 'paloaltonetworks', owned by PaloAltoNetworks
2018-07-04 01:56:26,391 p=19712 u=ashok |  - downloading role from https://github.com/PaloAltoNetworks/ansible-role-paloaltonetworks/archive/V1.0.7.1.tar.gz
2018-07-04 01:56:28,486 p=19712 u=ashok |  - extracting PaloAltoNetworks.paloaltonetworks to /home/ashok/development/ansible2/roles/PaloAltoNetworks.paloaltonetworks
2018-07-04 01:56:28,493 p=19712 u=ashok |  - PaloAltoNetworks.paloaltonetworks (V1.0.7.1) was installed successfully
2018-07-04 01:56:29,323 p=19712 u=ashok |  - downloading role 'mysql', owned by geerlingguy
2018-07-04 01:56:32,499 p=19712 u=ashok |  - downloading role from https://github.com/geerlingguy/ansible-role-mysql/archive/2.9.0.tar.gz
2018-07-04 01:56:34,252 p=19712 u=ashok |  - extracting geerlingguy.mysql to /home/ashok/development/ansible2/roles/geerlingguy.mysql
2018-07-04 01:56:34,256 p=19712 u=ashok |  - geerlingguy.mysql (2.9.0) was installed successfully
2018-07-04 01:56:35,085 p=19712 u=ashok |  - downloading role 'nginx', owned by hxpro
2018-07-04 01:56:36,955 p=19712 u=ashok |  - downloading role from https://github.com/hxpro/ansible-role-nginx/archive/master.tar.gz
2018-07-04 01:56:38,673 p=19712 u=ashok |  - extracting hxpro.nginx to /home/ashok/development/ansible2/roles/hxpro.nginx
2018-07-04 01:56:38,676 p=19712 u=ashok |  - hxpro.nginx (master) was installed successfully
2018-07-04 01:56:38,676 p=19712 u=ashok |  - adding dependency: hxpro.epel
2018-07-04 01:56:39,508 p=19712 u=ashok |  - downloading role 'datadog', owned by Datadog
2018-07-04 01:56:41,557 p=19712 u=ashok |  - downloading role from https://github.com/DataDog/ansible-datadog/archive/2.2.0.tar.gz
2018-07-04 01:56:43,421 p=19712 u=ashok |  - extracting Datadog.datadog to /home/ashok/development/ansible2/roles/Datadog.datadog
2018-07-04 01:56:43,425 p=19712 u=ashok |  - Datadog.datadog (2.2.0) was installed successfully
2018-07-04 01:56:44,256 p=19712 u=ashok |  - downloading role 'epel', owned by hxpro
2018-07-04 01:56:46,315 p=19712 u=ashok |  - downloading role from https://github.com/hxpro/ansible-role-epel/archive/v0.1.tar.gz
2018-07-04 01:56:48,080 p=19712 u=ashok |  - extracting hxpro.epel to /home/ashok/development/ansible2/roles/hxpro.epel
2018-07-04 01:56:48,082 p=19712 u=ashok |  - hxpro.epel (v0.1) was installed successfully
2018-07-04 01:57:25,895 p=20107 u=ashok |  PLAY [yumrepos] ********************************************************************************************************************************************************************************************
2018-07-04 01:57:25,911 p=20107 u=ashok |  TASK [Gathering Facts] *************************************************************************************************************************************************************************************
2018-07-04 01:57:27,115 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:57:27,121 p=20107 u=ashok |  TASK [hxpro.epel : Install epel-release on CentOS] *********************************************************************************************************************************************************
2018-07-04 01:57:34,029 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:57:34,034 p=20107 u=ashok |  TASK [hxpro.epel : Install epel-release on RedHat] *********************************************************************************************************************************************************
2018-07-04 01:57:34,049 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:57:34,055 p=20107 u=ashok |  TASK [hxpro.nginx : Check IPv6] ****************************************************************************************************************************************************************************
2018-07-04 01:57:34,066 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:57:34,072 p=20107 u=ashok |  TASK [hxpro.nginx : Install nginx] *************************************************************************************************************************************************************************
2018-07-04 01:57:51,401 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:57:51,407 p=20107 u=ashok |  TASK [hxpro.nginx : Nginx config] **************************************************************************************************************************************************************************
2018-07-04 01:57:52,225 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:57:52,230 p=20107 u=ashok |  TASK [hxpro.nginx : Nginx default config] ******************************************************************************************************************************************************************
2018-07-04 01:57:52,789 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:57:52,793 p=20107 u=ashok |  TASK [hxpro.nginx : LE payload root folder] ****************************************************************************************************************************************************************
2018-07-04 01:57:52,806 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:57:52,811 p=20107 u=ashok |  TASK [hxpro.nginx : Acme snippet] **************************************************************************************************************************************************************************
2018-07-04 01:57:52,824 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:57:52,830 p=20107 u=ashok |  TASK [hxpro.nginx : file] **********************************************************************************************************************************************************************************
2018-07-04 01:57:53,269 p=20107 u=ashok |  ok: [deployserver-ashok] => (item=/usr/share/nginx/modules/mod-http-geoip.conf)
2018-07-04 01:57:53,568 p=20107 u=ashok |  ok: [deployserver-ashok] => (item=/usr/share/nginx/modules/mod-http-image-filter.conf)
2018-07-04 01:57:53,864 p=20107 u=ashok |  ok: [deployserver-ashok] => (item=/usr/share/nginx/modules/mod-http-perl.conf)
2018-07-04 01:57:54,153 p=20107 u=ashok |  ok: [deployserver-ashok] => (item=/usr/share/nginx/modules/mod-http-xslt-filter.conf)
2018-07-04 01:57:54,439 p=20107 u=ashok |  ok: [deployserver-ashok] => (item=/usr/share/nginx/modules/mod-mail.conf)
2018-07-04 01:57:54,739 p=20107 u=ashok |  ok: [deployserver-ashok] => (item=/usr/share/nginx/modules/mod-stream.conf)
2018-07-04 01:57:54,745 p=20107 u=ashok |  TASK [hxpro.nginx : Start/enable nginx service] ************************************************************************************************************************************************************
2018-07-04 01:57:55,642 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:57:55,648 p=20107 u=ashok |  TASK [yumrepo : install nginx config file] *****************************************************************************************************************************************************************
2018-07-04 01:57:56,214 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:57:56,219 p=20107 u=ashok |  TASK [yumrepo : create yumrepo dir] ************************************************************************************************************************************************************************
2018-07-04 01:57:56,524 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:57:56,530 p=20107 u=ashok |  TASK [yumrepo : ensure createrepo is installed] ************************************************************************************************************************************************************
2018-07-04 01:57:58,843 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:57:58,848 p=20107 u=ashok |  TASK [yumrepo : ensure wget is installed] ******************************************************************************************************************************************************************
2018-07-04 01:58:01,062 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:01,068 p=20107 u=ashok |  TASK [yumrepo : ensure yumutils is installed] **************************************************************************************************************************************************************
2018-07-04 01:58:01,913 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:58:01,918 p=20107 u=ashok |  TASK [yumrepo : get latest artefacts from circleci] ********************************************************************************************************************************************************
2018-07-04 01:58:06,655 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:06,661 p=20107 u=ashok |  TASK [yumrepo : refresh yum repo] **************************************************************************************************************************************************************************
2018-07-04 01:58:07,393 p=20107 u=ashok |   [WARNING]: Consider using file module with state=absent rather than running rm

2018-07-04 01:58:07,393 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:07,394 p=20107 u=ashok |  RUNNING HANDLER [hxpro.nginx : test nginx configuration] ***************************************************************************************************************************************************
2018-07-04 01:58:07,722 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:07,723 p=20107 u=ashok |  RUNNING HANDLER [hxpro.nginx : reload nginx service] *******************************************************************************************************************************************************
2018-07-04 01:58:08,390 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:08,391 p=20107 u=ashok |  RUNNING HANDLER [yumrepo : reload nginx] *******************************************************************************************************************************************************************
2018-07-04 01:58:09,055 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:09,060 p=20107 u=ashok |  PLAY [all] *************************************************************************************************************************************************************************************************
2018-07-04 01:58:09,076 p=20107 u=ashok |  TASK [Gathering Facts] *************************************************************************************************************************************************************************************
2018-07-04 01:58:09,500 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:58:09,506 p=20107 u=ashok |  TASK [base : ensure custom hostname set in hosts file] *****************************************************************************************************************************************************
2018-07-04 01:58:09,946 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:09,951 p=20107 u=ashok |  TASK [base : install epel release] *************************************************************************************************************************************************************************
2018-07-04 01:58:12,600 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:58:12,605 p=20107 u=ashok |  TASK [base : Required base packages] ***********************************************************************************************************************************************************************
2018-07-04 01:58:22,673 p=20107 u=ashok |  changed: [deployserver-ashok] => (item=[u'wget', u'psmisc', u'python-pip', u'firewalld', u'git', u'tmux', u'wget', u'curl', u'htop', u'bzip2', u'pbzip2'])
2018-07-04 01:58:22,679 p=20107 u=ashok |  TASK [base : Install mlocate] ******************************************************************************************************************************************************************************
2018-07-04 01:58:24,653 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:24,658 p=20107 u=ashok |  TASK [base : Required base packages (RedHat)] **************************************************************************************************************************************************************
2018-07-04 01:58:29,382 p=20107 u=ashok |  changed: [deployserver-ashok] => (item=[u'vim-enhanced', u'bind-utils'])
2018-07-04 01:58:29,387 p=20107 u=ashok |  TASK [base : Required base packages (Ubuntu)] **************************************************************************************************************************************************************
2018-07-04 01:58:29,407 p=20107 u=ashok |  skipping: [deployserver-ashok] => (item=[]) 
2018-07-04 01:58:29,413 p=20107 u=ashok |  TASK [base : disable selinux] ******************************************************************************************************************************************************************************
2018-07-04 01:58:30,043 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:30,049 p=20107 u=ashok |  TASK [base : Make sure we have a 'wheel' group] ************************************************************************************************************************************************************
2018-07-04 01:58:30,485 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:58:30,490 p=20107 u=ashok |  TASK [base : Allow 'wheel' group to have passwordless sudo] ************************************************************************************************************************************************
2018-07-04 01:58:30,796 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:30,802 p=20107 u=ashok |  TASK [base : user] *****************************************************************************************************************************************************************************************
2018-07-04 01:58:31,335 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:31,341 p=20107 u=ashok |  TASK [base : authorized_key] *******************************************************************************************************************************************************************************
2018-07-04 01:58:31,875 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:31,880 p=20107 u=ashok |  TASK [base : install python virtualenv] ********************************************************************************************************************************************************************
2018-07-04 01:58:33,679 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:33,684 p=20107 u=ashok |  TASK [base : upgrade python-pip] ***************************************************************************************************************************************************************************
2018-07-04 01:58:35,563 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:35,568 p=20107 u=ashok |  TASK [base : Install Python Datadog API] *******************************************************************************************************************************************************************
2018-07-04 01:58:37,466 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:37,471 p=20107 u=ashok |  TASK [base : Install PyYAML] *******************************************************************************************************************************************************************************
2018-07-04 01:58:38,157 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:58:38,163 p=20107 u=ashok |  TASK [base : Install AWS CLI] ******************************************************************************************************************************************************************************
2018-07-04 01:58:43,137 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:43,143 p=20107 u=ashok |  TASK [base : ensure firewalld is running on RedHat] ********************************************************************************************************************************************************
2018-07-04 01:58:44,123 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:44,128 p=20107 u=ashok |  TASK [base : Allow http through firewall (RedHat)] *********************************************************************************************************************************************************
2018-07-04 01:58:45,445 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:45,451 p=20107 u=ashok |  TASK [base : Allow https through firewall (RedHat)] ********************************************************************************************************************************************************
2018-07-04 01:58:46,103 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:46,109 p=20107 u=ashok |  TASK [base : set timezone to Australia/Sydney] *************************************************************************************************************************************************************
2018-07-04 01:58:46,607 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:46,613 p=20107 u=ashok |  TASK [base : ensure our yum repository is installed] *******************************************************************************************************************************************************
2018-07-04 01:58:47,060 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:47,066 p=20107 u=ashok |  TASK [Datadog.datadog : Install apt-transport-https] *******************************************************************************************************************************************************
2018-07-04 01:58:47,079 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:58:47,085 p=20107 u=ashok |  TASK [Datadog.datadog : Install ubuntu apt-key server] *****************************************************************************************************************************************************
2018-07-04 01:58:47,097 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:58:47,102 p=20107 u=ashok |  TASK [Datadog.datadog : Install Datadog apt-key] ***********************************************************************************************************************************************************
2018-07-04 01:58:47,116 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:58:47,121 p=20107 u=ashok |  TASK [Datadog.datadog : Ensure Datadog non-https repositories are deprecated] ******************************************************************************************************************************
2018-07-04 01:58:47,139 p=20107 u=ashok |  skipping: [deployserver-ashok] => (item=deb http://apt.datadoghq.com/ stable main) 
2018-07-04 01:58:47,142 p=20107 u=ashok |  skipping: [deployserver-ashok] => (item=deb http://apt.datadoghq.com/ stable 6) 
2018-07-04 01:58:47,147 p=20107 u=ashok |  TASK [Datadog.datadog : Ensure Datadog repository is up-to-date] *******************************************************************************************************************************************
2018-07-04 01:58:47,160 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:58:47,166 p=20107 u=ashok |  TASK [Datadog.datadog : Ensure Datadog repository is up-to-date (agent5)] **********************************************************************************************************************************
2018-07-04 01:58:47,180 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:58:47,185 p=20107 u=ashok |  TASK [Datadog.datadog : Ensure pinned version of Datadog agent is installed] *******************************************************************************************************************************
2018-07-04 01:58:47,198 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:58:47,203 p=20107 u=ashok |  TASK [Datadog.datadog : Ensure Datadog agent is installed] *************************************************************************************************************************************************
2018-07-04 01:58:47,216 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:58:47,221 p=20107 u=ashok |  TASK [Datadog.datadog : Download new RPM key] **************************************************************************************************************************************************************
2018-07-04 01:58:48,165 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:48,171 p=20107 u=ashok |  TASK [Datadog.datadog : Import new RPM key] ****************************************************************************************************************************************************************
2018-07-04 01:58:48,841 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:48,847 p=20107 u=ashok |  TASK [Datadog.datadog : Install DataDog yum repo] **********************************************************************************************************************************************************
2018-07-04 01:58:49,202 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:49,207 p=20107 u=ashok |  TASK [Datadog.datadog : Install DataDog yum repo (agent5)] *************************************************************************************************************************************************
2018-07-04 01:58:49,528 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:58:49,534 p=20107 u=ashok |  TASK [Datadog.datadog : Install pinned datadog-agent package] **********************************************************************************************************************************************
2018-07-04 01:58:49,549 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:58:49,555 p=20107 u=ashok |  TASK [Datadog.datadog : Install latest datadog-agent package] **********************************************************************************************************************************************
2018-07-04 01:58:59,951 p=20107 u=ashok |   [WARNING]: Consider using yum module rather than running yum

2018-07-04 01:58:59,951 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:58:59,956 p=20107 u=ashok |  TASK [Datadog.datadog : (agent5) Create Datadog agent config directory] ************************************************************************************************************************************
2018-07-04 01:58:59,966 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:58:59,971 p=20107 u=ashok |  TASK [Datadog.datadog : (agent5) Create main Datadog agent configuration file] *****************************************************************************************************************************
2018-07-04 01:58:59,981 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:58:59,986 p=20107 u=ashok |  TASK [Datadog.datadog : (agent5) Ensure datadog-agent is running] ******************************************************************************************************************************************
2018-07-04 01:58:59,997 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:00,003 p=20107 u=ashok |  TASK [Datadog.datadog : (agent5) Ensure datadog-agent is not running] **************************************************************************************************************************************
2018-07-04 01:59:00,014 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:00,020 p=20107 u=ashok |  TASK [Datadog.datadog : (agent5) Create a configuration file for each Datadog check] ***********************************************************************************************************************
2018-07-04 01:59:00,038 p=20107 u=ashok |  TASK [Datadog.datadog : Create Datadog agent config directory] *********************************************************************************************************************************************
2018-07-04 01:59:01,100 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:01,106 p=20107 u=ashok |  TASK [Datadog.datadog : Create main Datadog agent configuration file] **************************************************************************************************************************************
2018-07-04 01:59:01,767 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:59:01,771 p=20107 u=ashok |  TASK [Datadog.datadog : Ensure configuration directories are present for each Datadog check] ***************************************************************************************************************
2018-07-04 01:59:01,788 p=20107 u=ashok |  TASK [Datadog.datadog : Create a configuration file for each Datadog check] ********************************************************************************************************************************
2018-07-04 01:59:01,805 p=20107 u=ashok |  TASK [Datadog.datadog : Remove old configuration file for each Datadog check] ******************************************************************************************************************************
2018-07-04 01:59:01,823 p=20107 u=ashok |  TASK [Datadog.datadog : Create trace agent configuration file] *********************************************************************************************************************************************
2018-07-04 01:59:02,465 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:59:02,469 p=20107 u=ashok |  TASK [Datadog.datadog : Create process agent configuration file] *******************************************************************************************************************************************
2018-07-04 01:59:03,147 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:59:03,152 p=20107 u=ashok |  TASK [Datadog.datadog : Ensure datadog-agent is running] ***************************************************************************************************************************************************
2018-07-04 01:59:03,927 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:59:03,932 p=20107 u=ashok |  TASK [Datadog.datadog : Ensure datadog-agent is not running] ***********************************************************************************************************************************************
2018-07-04 01:59:03,947 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:03,948 p=20107 u=ashok |  RUNNING HANDLER [base : update_db] *************************************************************************************************************************************************************************
2018-07-04 01:59:06,825 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:59:06,826 p=20107 u=ashok |  RUNNING HANDLER [Datadog.datadog : restart datadog-agent] **************************************************************************************************************************************************
2018-07-04 01:59:07,546 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:59:07,551 p=20107 u=ashok |  PLAY [dbservers] *******************************************************************************************************************************************************************************************
2018-07-04 01:59:07,558 p=20107 u=ashok |  TASK [Gathering Facts] *************************************************************************************************************************************************************************************
2018-07-04 01:59:08,257 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:08,263 p=20107 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 01:59:08,303 p=20107 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/variables.yml for deployserver-ashok
2018-07-04 01:59:08,311 p=20107 u=ashok |  TASK [geerlingguy.mysql : Include OS-specific variables.] **************************************************************************************************************************************************
2018-07-04 01:59:08,328 p=20107 u=ashok |  TASK [geerlingguy.mysql : Include OS-specific variables (RedHat).] *****************************************************************************************************************************************
2018-07-04 01:59:08,428 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:08,435 p=20107 u=ashok |  TASK [geerlingguy.mysql : Define mysql_packages.] **********************************************************************************************************************************************************
2018-07-04 01:59:08,535 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:08,540 p=20107 u=ashok |  TASK [geerlingguy.mysql : Define mysql_daemon.] ************************************************************************************************************************************************************
2018-07-04 01:59:08,638 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:08,644 p=20107 u=ashok |  TASK [geerlingguy.mysql : Define mysql_slow_query_log_file.] ***********************************************************************************************************************************************
2018-07-04 01:59:08,740 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:08,746 p=20107 u=ashok |  TASK [geerlingguy.mysql : Define mysql_log_error.] *********************************************************************************************************************************************************
2018-07-04 01:59:08,846 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:08,852 p=20107 u=ashok |  TASK [geerlingguy.mysql : Define mysql_syslog_tag.] ********************************************************************************************************************************************************
2018-07-04 01:59:08,947 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:08,953 p=20107 u=ashok |  TASK [geerlingguy.mysql : Define mysql_pid_file.] **********************************************************************************************************************************************************
2018-07-04 01:59:09,046 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:09,052 p=20107 u=ashok |  TASK [geerlingguy.mysql : Define mysql_config_file.] *******************************************************************************************************************************************************
2018-07-04 01:59:09,144 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:09,149 p=20107 u=ashok |  TASK [geerlingguy.mysql : Define mysql_config_include_dir.] ************************************************************************************************************************************************
2018-07-04 01:59:09,242 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:09,248 p=20107 u=ashok |  TASK [geerlingguy.mysql : Define mysql_socket.] ************************************************************************************************************************************************************
2018-07-04 01:59:09,341 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:09,347 p=20107 u=ashok |  TASK [geerlingguy.mysql : Define mysql_supports_innodb_large_prefix.] **************************************************************************************************************************************
2018-07-04 01:59:09,436 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:09,441 p=20107 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 01:59:09,465 p=20107 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/setup-RedHat.yml for deployserver-ashok
2018-07-04 01:59:09,475 p=20107 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL packages are installed.] ********************************************************************************************************************************************
2018-07-04 01:59:18,729 p=20107 u=ashok |  changed: [deployserver-ashok] => (item=[u'mariadb', u'mariadb-server', u'mariadb-libs', u'MySQL-python', u'perl-DBD-MySQL'])
2018-07-04 01:59:18,734 p=20107 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL Python libraries are installed.] ************************************************************************************************************************************
2018-07-04 01:59:19,293 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:19,299 p=20107 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 01:59:19,313 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:19,318 p=20107 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 01:59:19,331 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:19,337 p=20107 u=ashok |  TASK [geerlingguy.mysql : Check if MySQL packages were installed.] *****************************************************************************************************************************************
2018-07-04 01:59:19,396 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:19,402 p=20107 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 01:59:19,442 p=20107 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/configure.yml for deployserver-ashok
2018-07-04 01:59:19,455 p=20107 u=ashok |  TASK [geerlingguy.mysql : Copy my.cnf global MySQL configuration.] *****************************************************************************************************************************************
2018-07-04 01:59:20,120 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:59:20,125 p=20107 u=ashok |  TASK [geerlingguy.mysql : Verify mysql include directory exists.] ******************************************************************************************************************************************
2018-07-04 01:59:20,140 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:20,145 p=20107 u=ashok |  TASK [geerlingguy.mysql : Copy my.cnf override files into include directory.] ******************************************************************************************************************************
2018-07-04 01:59:20,162 p=20107 u=ashok |  TASK [geerlingguy.mysql : Create slow query log file (if configured).] *************************************************************************************************************************************
2018-07-04 01:59:20,173 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:20,179 p=20107 u=ashok |  TASK [geerlingguy.mysql : Create datadir if it does not exist] *********************************************************************************************************************************************
2018-07-04 01:59:20,533 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:20,539 p=20107 u=ashok |  TASK [geerlingguy.mysql : Set ownership on slow query log file (if configured).] ***************************************************************************************************************************
2018-07-04 01:59:20,550 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:20,555 p=20107 u=ashok |  TASK [geerlingguy.mysql : Create error log file (if configured).] ******************************************************************************************************************************************
2018-07-04 01:59:20,908 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:20,914 p=20107 u=ashok |  TASK [geerlingguy.mysql : Set ownership on error log file (if configured).] ********************************************************************************************************************************
2018-07-04 01:59:21,269 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:21,275 p=20107 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL is started and enabled on boot.] ************************************************************************************************************************************
2018-07-04 01:59:28,041 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:59:28,046 p=20107 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 01:59:28,091 p=20107 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/secure-installation.yml for deployserver-ashok
2018-07-04 01:59:28,110 p=20107 u=ashok |  TASK [geerlingguy.mysql : Get MySQL version.] **************************************************************************************************************************************************************
2018-07-04 01:59:28,591 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:28,597 p=20107 u=ashok |  TASK [geerlingguy.mysql : Ensure default user is present.] *************************************************************************************************************************************************
2018-07-04 01:59:28,611 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:28,616 p=20107 u=ashok |  TASK [geerlingguy.mysql : Copy user-my.cnf file with password credentials.] ********************************************************************************************************************************
2018-07-04 01:59:28,631 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:28,637 p=20107 u=ashok |  TASK [geerlingguy.mysql : Disallow root login remotely] ****************************************************************************************************************************************************
2018-07-04 01:59:28,968 p=20107 u=ashok |  ok: [deployserver-ashok] => (item=DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'))
2018-07-04 01:59:28,974 p=20107 u=ashok |  TASK [geerlingguy.mysql : Get list of hosts for the root user.] ********************************************************************************************************************************************
2018-07-04 01:59:29,308 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:29,314 p=20107 u=ashok |  TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (5.7.x).] ******************************************************************************************************************
2018-07-04 01:59:29,333 p=20107 u=ashok |  skipping: [deployserver-ashok] => (item=127.0.0.1) 
2018-07-04 01:59:29,337 p=20107 u=ashok |  skipping: [deployserver-ashok] => (item=::1) 
2018-07-04 01:59:29,342 p=20107 u=ashok |  skipping: [deployserver-ashok] => (item=localhost) 
2018-07-04 01:59:29,348 p=20107 u=ashok |  TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (< 5.7.x).] ****************************************************************************************************************
2018-07-04 01:59:29,695 p=20107 u=ashok |  changed: [deployserver-ashok] => (item=127.0.0.1)
2018-07-04 01:59:30,022 p=20107 u=ashok |  changed: [deployserver-ashok] => (item=::1)
2018-07-04 01:59:30,336 p=20107 u=ashok |  changed: [deployserver-ashok] => (item=localhost)
2018-07-04 01:59:30,342 p=20107 u=ashok |  TASK [geerlingguy.mysql : Copy .my.cnf file with root password credentials.] *******************************************************************************************************************************
2018-07-04 01:59:30,944 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:59:30,949 p=20107 u=ashok |  TASK [geerlingguy.mysql : Get list of hosts for the anonymous user.] ***************************************************************************************************************************************
2018-07-04 01:59:31,273 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:31,279 p=20107 u=ashok |  TASK [geerlingguy.mysql : Remove anonymous MySQL users.] ***************************************************************************************************************************************************
2018-07-04 01:59:31,889 p=20107 u=ashok |  changed: [deployserver-ashok] => (item=deployserver.ops.localdomain)
2018-07-04 01:59:32,206 p=20107 u=ashok |  changed: [deployserver-ashok] => (item=localhost)
2018-07-04 01:59:32,212 p=20107 u=ashok |  TASK [geerlingguy.mysql : Remove MySQL test database.] *****************************************************************************************************************************************************
2018-07-04 01:59:32,643 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:59:32,649 p=20107 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 01:59:32,669 p=20107 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/databases.yml for deployserver-ashok
2018-07-04 01:59:32,695 p=20107 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL databases are present.] *********************************************************************************************************************************************
2018-07-04 01:59:33,036 p=20107 u=ashok |  changed: [deployserver-ashok] => (item={u'name': u'appdb'})
2018-07-04 01:59:33,041 p=20107 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 01:59:33,063 p=20107 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/users.yml for deployserver-ashok
2018-07-04 01:59:33,096 p=20107 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL users are present.] *************************************************************************************************************************************************
2018-07-04 01:59:33,435 p=20107 u=ashok |  changed: [deployserver-ashok] => (item=(censored due to no_log))
2018-07-04 01:59:33,441 p=20107 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 01:59:33,472 p=20107 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/replication.yml for deployserver-ashok
2018-07-04 01:59:33,517 p=20107 u=ashok |  TASK [geerlingguy.mysql : Ensure replication user exists on master.] ***************************************************************************************************************************************
2018-07-04 01:59:33,532 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:33,537 p=20107 u=ashok |  TASK [geerlingguy.mysql : Check slave replication status.] *************************************************************************************************************************************************
2018-07-04 01:59:33,551 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:33,560 p=20107 u=ashok |  TASK [geerlingguy.mysql : Check master replication status.] ************************************************************************************************************************************************
2018-07-04 01:59:33,578 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:33,584 p=20107 u=ashok |  TASK [geerlingguy.mysql : Configure replication on the slave.] *********************************************************************************************************************************************
2018-07-04 01:59:33,601 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:33,607 p=20107 u=ashok |  TASK [geerlingguy.mysql : Start replication.] **************************************************************************************************************************************************************
2018-07-04 01:59:33,624 p=20107 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 01:59:33,625 p=20107 u=ashok |  RUNNING HANDLER [geerlingguy.mysql : restart mysql] ********************************************************************************************************************************************************
2018-07-04 01:59:34,040 p=20107 u=ashok |   [WARNING]: Ignoring "sleep" as it is not used in "systemd"

2018-07-04 01:59:38,314 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:59:38,320 p=20107 u=ashok |  PLAY [appservers] ******************************************************************************************************************************************************************************************
2018-07-04 01:59:38,325 p=20107 u=ashok |  TASK [Gathering Facts] *************************************************************************************************************************************************************************************
2018-07-04 01:59:38,888 p=20107 u=ashok |  ok: [deployserver-ashok]
2018-07-04 01:59:38,893 p=20107 u=ashok |  TASK [appserver : ensure latest version of our app is deployed] ********************************************************************************************************************************************
2018-07-04 01:59:43,975 p=20107 u=ashok |  changed: [deployserver-ashok]
2018-07-04 01:59:43,977 p=20107 u=ashok |  PLAY RECAP *************************************************************************************************************************************************************************************************
2018-07-04 01:59:43,977 p=20107 u=ashok |  deployserver-ashok         : ok=90   changed=52   unreachable=0    failed=0   
2018-07-04 02:06:02,930 p=24873 u=ashok |  PLAY [appservers] ******************************************************************************************************************************************************************************************
2018-07-04 02:06:02,934 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:06:02,936 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:06:03,769 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 346
2018-07-04 02:06:03,787 p=24873 u=ashok |  TASK [Gathering Facts] *************************************************************************************************************************************************************************************
2018-07-04 02:06:04,919 p=24873 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:06:04,925 p=24873 u=ashok |  TASK [appserver : ensure latest version of our app is deployed] ********************************************************************************************************************************************
2018-07-04 02:06:07,850 p=24873 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:06:07,852 p=24873 u=ashok |  PLAY RECAP *************************************************************************************************************************************************************************************************
2018-07-04 02:06:07,852 p=24873 u=ashok |  deployserver-ashok         : ok=2    changed=0    unreachable=0    failed=0   
2018-07-04 02:06:07,853 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:06:07,854 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:06:08,726 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:06:08,729 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:06:08,729 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:06:09,556 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:06:09,558 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:06:09,559 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:06:10,382 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:06:10,384 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:06:10,385 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:06:11,270 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:06:11,273 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:06:11,274 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:06:12,103 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:06:12,106 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:06:12,107 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:06:12,936 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:06:12,939 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:06:12,940 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:06:13,762 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 396
2018-07-04 02:11:13,417 p=27051 u=ashok |  playbook: ./appservers.yml
2018-07-04 02:11:14,207 p=27062 u=ashok |  playbook: ./dbservers.yml
2018-07-04 02:11:15,009 p=27069 u=ashok |  playbook: ./yumrepos.yml
2018-07-04 02:11:15,977 p=27087 u=ashok |  playbook: ./site.yml
2018-07-04 02:28:35,859 p=4025 u=ashok |  PLAY [dbservers] *******************************************************************************************************************************************************************************************
2018-07-04 02:28:35,864 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:28:35,865 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:28:36,689 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 343
2018-07-04 02:28:36,707 p=4025 u=ashok |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/home/ashok/development/ansible2/group_vars/dbservers': line 17, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  $ANSIBLE_VAULT;1.1;AES256
  61326236333839343130616163383036363139613432313131326362376633346336306261643064
  ^ here

exception type: <class 'yaml.scanner.ScannerError'>
exception: while scanning a simple key
  in "<unicode string>", line 16, column 3:
      $ANSIBLE_VAULT;1.1;AES256
      ^
could not find expected ':'
  in "<unicode string>", line 17, column 3:
      61326236333839343130616163383036 ... 
      ^
2018-07-04 02:32:28,587 p=6427 u=ashok |  PLAY [dbservers] *******************************************************************************************************************************************************************************************
2018-07-04 02:32:28,591 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:32:28,593 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:32:29,427 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 343
2018-07-04 02:32:29,447 p=6427 u=ashok |  TASK [Gathering Facts] *************************************************************************************************************************************************************************************
2018-07-04 02:32:30,763 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:30,768 p=6427 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:32:30,806 p=6427 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/variables.yml for deployserver-ashok
2018-07-04 02:32:30,815 p=6427 u=ashok |  TASK [geerlingguy.mysql : Include OS-specific variables.] **************************************************************************************************************************************************
2018-07-04 02:32:30,831 p=6427 u=ashok |  TASK [geerlingguy.mysql : Include OS-specific variables (RedHat).] *****************************************************************************************************************************************
2018-07-04 02:32:30,894 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:30,900 p=6427 u=ashok |  TASK [geerlingguy.mysql : Define mysql_packages.] **********************************************************************************************************************************************************
2018-07-04 02:32:30,961 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:30,966 p=6427 u=ashok |  TASK [geerlingguy.mysql : Define mysql_daemon.] ************************************************************************************************************************************************************
2018-07-04 02:32:31,026 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:31,031 p=6427 u=ashok |  TASK [geerlingguy.mysql : Define mysql_slow_query_log_file.] ***********************************************************************************************************************************************
2018-07-04 02:32:31,090 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:31,096 p=6427 u=ashok |  TASK [geerlingguy.mysql : Define mysql_log_error.] *********************************************************************************************************************************************************
2018-07-04 02:32:31,155 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:31,161 p=6427 u=ashok |  TASK [geerlingguy.mysql : Define mysql_syslog_tag.] ********************************************************************************************************************************************************
2018-07-04 02:32:31,219 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:31,225 p=6427 u=ashok |  TASK [geerlingguy.mysql : Define mysql_pid_file.] **********************************************************************************************************************************************************
2018-07-04 02:32:31,283 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:31,288 p=6427 u=ashok |  TASK [geerlingguy.mysql : Define mysql_config_file.] *******************************************************************************************************************************************************
2018-07-04 02:32:31,348 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:31,353 p=6427 u=ashok |  TASK [geerlingguy.mysql : Define mysql_config_include_dir.] ************************************************************************************************************************************************
2018-07-04 02:32:31,413 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:31,418 p=6427 u=ashok |  TASK [geerlingguy.mysql : Define mysql_socket.] ************************************************************************************************************************************************************
2018-07-04 02:32:31,478 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:31,483 p=6427 u=ashok |  TASK [geerlingguy.mysql : Define mysql_supports_innodb_large_prefix.] **************************************************************************************************************************************
2018-07-04 02:32:31,542 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:31,547 p=6427 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:32:31,572 p=6427 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/setup-RedHat.yml for deployserver-ashok
2018-07-04 02:32:31,582 p=6427 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL packages are installed.] ********************************************************************************************************************************************
2018-07-04 02:32:32,329 p=6427 u=ashok |  ok: [deployserver-ashok] => (item=[u'mariadb', u'mariadb-server', u'mariadb-libs', u'MySQL-python', u'perl-DBD-MySQL'])
2018-07-04 02:32:32,335 p=6427 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL Python libraries are installed.] ************************************************************************************************************************************
2018-07-04 02:32:32,872 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:32,877 p=6427 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:32:32,893 p=6427 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:32:32,898 p=6427 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:32:32,913 p=6427 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:32:32,918 p=6427 u=ashok |  TASK [geerlingguy.mysql : Check if MySQL packages were installed.] *****************************************************************************************************************************************
2018-07-04 02:32:32,979 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:32,984 p=6427 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:32:33,029 p=6427 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/configure.yml for deployserver-ashok
2018-07-04 02:32:33,043 p=6427 u=ashok |  TASK [geerlingguy.mysql : Copy my.cnf global MySQL configuration.] *****************************************************************************************************************************************
2018-07-04 02:32:33,875 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:33,881 p=6427 u=ashok |  TASK [geerlingguy.mysql : Verify mysql include directory exists.] ******************************************************************************************************************************************
2018-07-04 02:32:33,895 p=6427 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:32:33,901 p=6427 u=ashok |  TASK [geerlingguy.mysql : Copy my.cnf override files into include directory.] ******************************************************************************************************************************
2018-07-04 02:32:33,921 p=6427 u=ashok |  TASK [geerlingguy.mysql : Create slow query log file (if configured).] *************************************************************************************************************************************
2018-07-04 02:32:33,931 p=6427 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:32:33,936 p=6427 u=ashok |  TASK [geerlingguy.mysql : Create datadir if it does not exist] *********************************************************************************************************************************************
2018-07-04 02:32:34,292 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:34,298 p=6427 u=ashok |  TASK [geerlingguy.mysql : Set ownership on slow query log file (if configured).] ***************************************************************************************************************************
2018-07-04 02:32:34,307 p=6427 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:32:34,313 p=6427 u=ashok |  TASK [geerlingguy.mysql : Create error log file (if configured).] ******************************************************************************************************************************************
2018-07-04 02:32:34,757 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:34,762 p=6427 u=ashok |  TASK [geerlingguy.mysql : Set ownership on error log file (if configured).] ********************************************************************************************************************************
2018-07-04 02:32:35,086 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:35,092 p=6427 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL is started and enabled on boot.] ************************************************************************************************************************************
2018-07-04 02:32:35,897 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:35,903 p=6427 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:32:35,946 p=6427 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/secure-installation.yml for deployserver-ashok
2018-07-04 02:32:35,965 p=6427 u=ashok |  TASK [geerlingguy.mysql : Get MySQL version.] **************************************************************************************************************************************************************
2018-07-04 02:32:36,346 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:36,352 p=6427 u=ashok |  TASK [geerlingguy.mysql : Ensure default user is present.] *************************************************************************************************************************************************
2018-07-04 02:32:36,366 p=6427 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:32:36,371 p=6427 u=ashok |  TASK [geerlingguy.mysql : Copy user-my.cnf file with password credentials.] ********************************************************************************************************************************
2018-07-04 02:32:36,385 p=6427 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:32:36,390 p=6427 u=ashok |  TASK [geerlingguy.mysql : Disallow root login remotely] ****************************************************************************************************************************************************
2018-07-04 02:32:36,759 p=6427 u=ashok |  ok: [deployserver-ashok] => (item=DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'))
2018-07-04 02:32:36,764 p=6427 u=ashok |  TASK [geerlingguy.mysql : Get list of hosts for the root user.] ********************************************************************************************************************************************
2018-07-04 02:32:36,778 p=6427 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:32:36,784 p=6427 u=ashok |  TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (5.7.x).] ******************************************************************************************************************
2018-07-04 02:32:36,800 p=6427 u=ashok |  TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (< 5.7.x).] ****************************************************************************************************************
2018-07-04 02:32:36,819 p=6427 u=ashok |  TASK [geerlingguy.mysql : Copy .my.cnf file with root password credentials.] *******************************************************************************************************************************
2018-07-04 02:32:36,835 p=6427 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:32:36,840 p=6427 u=ashok |  TASK [geerlingguy.mysql : Get list of hosts for the anonymous user.] ***************************************************************************************************************************************
2018-07-04 02:32:37,198 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:37,203 p=6427 u=ashok |  TASK [geerlingguy.mysql : Remove anonymous MySQL users.] ***************************************************************************************************************************************************
2018-07-04 02:32:37,221 p=6427 u=ashok |  TASK [geerlingguy.mysql : Remove MySQL test database.] *****************************************************************************************************************************************************
2018-07-04 02:32:37,663 p=6427 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:32:37,669 p=6427 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:32:37,688 p=6427 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/databases.yml for deployserver-ashok
2018-07-04 02:32:37,713 p=6427 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL databases are present.] *********************************************************************************************************************************************
2018-07-04 02:32:38,053 p=6427 u=ashok |  ok: [deployserver-ashok] => (item={u'name': u'appdb'})
2018-07-04 02:32:38,059 p=6427 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:32:38,083 p=6427 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/users.yml for deployserver-ashok
2018-07-04 02:32:38,119 p=6427 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL users are present.] *************************************************************************************************************************************************
2018-07-04 02:32:38,132 p=6427 u=ashok |  fatal: [deployserver-ashok]: FAILED! => {"failed": true, "msg": "Attempting to decrypt but no vault secrets found"}
2018-07-04 02:32:38,132 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:32:38,133 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:32:38,967 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 396
2018-07-04 02:32:38,970 p=6427 u=ashok |  PLAY RECAP *************************************************************************************************************************************************************************************************
2018-07-04 02:32:38,971 p=6427 u=ashok |  deployserver-ashok         : ok=31   changed=0    unreachable=0    failed=1   
2018-07-04 02:32:38,971 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:32:38,972 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:32:39,804 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:32:39,806 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:32:39,807 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:32:40,639 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:32:40,641 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:32:40,642 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:32:41,480 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:32:41,482 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:32:41,483 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:32:42,314 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:32:42,317 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:32:42,318 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:32:43,140 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:32:43,142 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:32:43,143 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:32:43,974 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:32:43,977 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:32:43,978 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:32:44,809 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 504
2018-07-04 02:34:53,597 p=7604 u=ashok |  PLAY [dbservers] *******************************************************************************************************************************************************************************************
2018-07-04 02:34:53,602 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:34:53,603 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:34:54,437 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 343
2018-07-04 02:34:54,457 p=7604 u=ashok |  TASK [Gathering Facts] *************************************************************************************************************************************************************************************
2018-07-04 02:34:56,005 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:56,010 p=7604 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:34:56,049 p=7604 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/variables.yml for deployserver-ashok
2018-07-04 02:34:56,057 p=7604 u=ashok |  TASK [geerlingguy.mysql : Include OS-specific variables.] **************************************************************************************************************************************************
2018-07-04 02:34:56,074 p=7604 u=ashok |  TASK [geerlingguy.mysql : Include OS-specific variables (RedHat).] *****************************************************************************************************************************************
2018-07-04 02:34:56,136 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:56,142 p=7604 u=ashok |  TASK [geerlingguy.mysql : Define mysql_packages.] **********************************************************************************************************************************************************
2018-07-04 02:34:56,202 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:56,207 p=7604 u=ashok |  TASK [geerlingguy.mysql : Define mysql_daemon.] ************************************************************************************************************************************************************
2018-07-04 02:34:56,266 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:56,272 p=7604 u=ashok |  TASK [geerlingguy.mysql : Define mysql_slow_query_log_file.] ***********************************************************************************************************************************************
2018-07-04 02:34:56,330 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:56,336 p=7604 u=ashok |  TASK [geerlingguy.mysql : Define mysql_log_error.] *********************************************************************************************************************************************************
2018-07-04 02:34:56,394 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:56,399 p=7604 u=ashok |  TASK [geerlingguy.mysql : Define mysql_syslog_tag.] ********************************************************************************************************************************************************
2018-07-04 02:34:56,459 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:56,464 p=7604 u=ashok |  TASK [geerlingguy.mysql : Define mysql_pid_file.] **********************************************************************************************************************************************************
2018-07-04 02:34:56,524 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:56,529 p=7604 u=ashok |  TASK [geerlingguy.mysql : Define mysql_config_file.] *******************************************************************************************************************************************************
2018-07-04 02:34:56,589 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:56,594 p=7604 u=ashok |  TASK [geerlingguy.mysql : Define mysql_config_include_dir.] ************************************************************************************************************************************************
2018-07-04 02:34:56,654 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:56,659 p=7604 u=ashok |  TASK [geerlingguy.mysql : Define mysql_socket.] ************************************************************************************************************************************************************
2018-07-04 02:34:56,718 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:56,724 p=7604 u=ashok |  TASK [geerlingguy.mysql : Define mysql_supports_innodb_large_prefix.] **************************************************************************************************************************************
2018-07-04 02:34:56,782 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:56,787 p=7604 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:34:56,812 p=7604 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/setup-RedHat.yml for deployserver-ashok
2018-07-04 02:34:56,822 p=7604 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL packages are installed.] ********************************************************************************************************************************************
2018-07-04 02:34:57,568 p=7604 u=ashok |  ok: [deployserver-ashok] => (item=[u'mariadb', u'mariadb-server', u'mariadb-libs', u'MySQL-python', u'perl-DBD-MySQL'])
2018-07-04 02:34:57,574 p=7604 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL Python libraries are installed.] ************************************************************************************************************************************
2018-07-04 02:34:58,113 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:58,118 p=7604 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:34:58,131 p=7604 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:34:58,136 p=7604 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:34:58,149 p=7604 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:34:58,155 p=7604 u=ashok |  TASK [geerlingguy.mysql : Check if MySQL packages were installed.] *****************************************************************************************************************************************
2018-07-04 02:34:58,213 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:58,218 p=7604 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:34:58,258 p=7604 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/configure.yml for deployserver-ashok
2018-07-04 02:34:58,275 p=7604 u=ashok |  TASK [geerlingguy.mysql : Copy my.cnf global MySQL configuration.] *****************************************************************************************************************************************
2018-07-04 02:34:59,079 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:59,085 p=7604 u=ashok |  TASK [geerlingguy.mysql : Verify mysql include directory exists.] ******************************************************************************************************************************************
2018-07-04 02:34:59,097 p=7604 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:34:59,102 p=7604 u=ashok |  TASK [geerlingguy.mysql : Copy my.cnf override files into include directory.] ******************************************************************************************************************************
2018-07-04 02:34:59,118 p=7604 u=ashok |  TASK [geerlingguy.mysql : Create slow query log file (if configured).] *************************************************************************************************************************************
2018-07-04 02:34:59,129 p=7604 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:34:59,134 p=7604 u=ashok |  TASK [geerlingguy.mysql : Create datadir if it does not exist] *********************************************************************************************************************************************
2018-07-04 02:34:59,449 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:59,454 p=7604 u=ashok |  TASK [geerlingguy.mysql : Set ownership on slow query log file (if configured).] ***************************************************************************************************************************
2018-07-04 02:34:59,464 p=7604 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:34:59,470 p=7604 u=ashok |  TASK [geerlingguy.mysql : Create error log file (if configured).] ******************************************************************************************************************************************
2018-07-04 02:34:59,904 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:34:59,910 p=7604 u=ashok |  TASK [geerlingguy.mysql : Set ownership on error log file (if configured).] ********************************************************************************************************************************
2018-07-04 02:35:00,232 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:35:00,238 p=7604 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL is started and enabled on boot.] ************************************************************************************************************************************
2018-07-04 02:35:01,034 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:35:01,040 p=7604 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:35:01,084 p=7604 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/secure-installation.yml for deployserver-ashok
2018-07-04 02:35:01,103 p=7604 u=ashok |  TASK [geerlingguy.mysql : Get MySQL version.] **************************************************************************************************************************************************************
2018-07-04 02:35:01,462 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:35:01,467 p=7604 u=ashok |  TASK [geerlingguy.mysql : Ensure default user is present.] *************************************************************************************************************************************************
2018-07-04 02:35:01,482 p=7604 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:35:01,487 p=7604 u=ashok |  TASK [geerlingguy.mysql : Copy user-my.cnf file with password credentials.] ********************************************************************************************************************************
2018-07-04 02:35:01,502 p=7604 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:35:01,507 p=7604 u=ashok |  TASK [geerlingguy.mysql : Disallow root login remotely] ****************************************************************************************************************************************************
2018-07-04 02:35:01,889 p=7604 u=ashok |  ok: [deployserver-ashok] => (item=DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'))
2018-07-04 02:35:01,895 p=7604 u=ashok |  TASK [geerlingguy.mysql : Get list of hosts for the root user.] ********************************************************************************************************************************************
2018-07-04 02:35:01,911 p=7604 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:35:01,919 p=7604 u=ashok |  TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (5.7.x).] ******************************************************************************************************************
2018-07-04 02:35:01,936 p=7604 u=ashok |  TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (< 5.7.x).] ****************************************************************************************************************
2018-07-04 02:35:01,954 p=7604 u=ashok |  TASK [geerlingguy.mysql : Copy .my.cnf file with root password credentials.] *******************************************************************************************************************************
2018-07-04 02:35:02,005 p=7604 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:35:02,011 p=7604 u=ashok |  TASK [geerlingguy.mysql : Get list of hosts for the anonymous user.] ***************************************************************************************************************************************
2018-07-04 02:35:02,392 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:35:02,397 p=7604 u=ashok |  TASK [geerlingguy.mysql : Remove anonymous MySQL users.] ***************************************************************************************************************************************************
2018-07-04 02:35:02,416 p=7604 u=ashok |  TASK [geerlingguy.mysql : Remove MySQL test database.] *****************************************************************************************************************************************************
2018-07-04 02:35:02,859 p=7604 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:35:02,865 p=7604 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:35:02,886 p=7604 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/databases.yml for deployserver-ashok
2018-07-04 02:35:02,914 p=7604 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL databases are present.] *********************************************************************************************************************************************
2018-07-04 02:35:03,257 p=7604 u=ashok |  ok: [deployserver-ashok] => (item={u'name': u'appdb'})
2018-07-04 02:35:03,264 p=7604 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:35:03,284 p=7604 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/users.yml for deployserver-ashok
2018-07-04 02:35:03,318 p=7604 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL users are present.] *************************************************************************************************************************************************
2018-07-04 02:35:03,330 p=7604 u=ashok |  fatal: [deployserver-ashok]: FAILED! => {"failed": true, "msg": "Attempting to decrypt but no vault secrets found"}
2018-07-04 02:35:03,331 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:35:03,332 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:35:04,170 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 396
2018-07-04 02:35:04,173 p=7604 u=ashok |  PLAY RECAP *************************************************************************************************************************************************************************************************
2018-07-04 02:35:04,174 p=7604 u=ashok |  deployserver-ashok         : ok=31   changed=0    unreachable=0    failed=1   
2018-07-04 02:35:04,174 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:35:04,175 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:35:05,014 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:35:05,016 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:35:05,017 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:35:05,848 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:35:05,850 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:35:05,851 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:35:06,684 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:35:06,687 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:35:06,688 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:35:07,515 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:35:07,517 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:35:07,518 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:35:08,352 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:35:08,355 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:35:08,356 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:35:09,189 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:35:09,191 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:35:09,192 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:35:10,022 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 504
2018-07-04 02:50:07,173 p=14768 u=ashok |  PLAY [dbservers] *******************************************************************************************************************************************************************************************
2018-07-04 02:50:07,177 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:50:07,179 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:50:08,014 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 343
2018-07-04 02:50:08,034 p=14768 u=ashok |  TASK [Gathering Facts] *************************************************************************************************************************************************************************************
2018-07-04 02:50:09,218 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:09,224 p=14768 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:50:09,264 p=14768 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/variables.yml for deployserver-ashok
2018-07-04 02:50:09,272 p=14768 u=ashok |  TASK [geerlingguy.mysql : Include OS-specific variables.] **************************************************************************************************************************************************
2018-07-04 02:50:09,289 p=14768 u=ashok |  TASK [geerlingguy.mysql : Include OS-specific variables (RedHat).] *****************************************************************************************************************************************
2018-07-04 02:50:09,353 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:09,359 p=14768 u=ashok |  TASK [geerlingguy.mysql : Define mysql_packages.] **********************************************************************************************************************************************************
2018-07-04 02:50:09,425 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:09,430 p=14768 u=ashok |  TASK [geerlingguy.mysql : Define mysql_daemon.] ************************************************************************************************************************************************************
2018-07-04 02:50:09,492 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:09,498 p=14768 u=ashok |  TASK [geerlingguy.mysql : Define mysql_slow_query_log_file.] ***********************************************************************************************************************************************
2018-07-04 02:50:09,560 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:09,566 p=14768 u=ashok |  TASK [geerlingguy.mysql : Define mysql_log_error.] *********************************************************************************************************************************************************
2018-07-04 02:50:09,627 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:09,633 p=14768 u=ashok |  TASK [geerlingguy.mysql : Define mysql_syslog_tag.] ********************************************************************************************************************************************************
2018-07-04 02:50:09,694 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:09,699 p=14768 u=ashok |  TASK [geerlingguy.mysql : Define mysql_pid_file.] **********************************************************************************************************************************************************
2018-07-04 02:50:09,761 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:09,766 p=14768 u=ashok |  TASK [geerlingguy.mysql : Define mysql_config_file.] *******************************************************************************************************************************************************
2018-07-04 02:50:09,827 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:09,833 p=14768 u=ashok |  TASK [geerlingguy.mysql : Define mysql_config_include_dir.] ************************************************************************************************************************************************
2018-07-04 02:50:09,892 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:09,898 p=14768 u=ashok |  TASK [geerlingguy.mysql : Define mysql_socket.] ************************************************************************************************************************************************************
2018-07-04 02:50:09,958 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:09,964 p=14768 u=ashok |  TASK [geerlingguy.mysql : Define mysql_supports_innodb_large_prefix.] **************************************************************************************************************************************
2018-07-04 02:50:10,023 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:10,028 p=14768 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:50:10,053 p=14768 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/setup-RedHat.yml for deployserver-ashok
2018-07-04 02:50:10,063 p=14768 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL packages are installed.] ********************************************************************************************************************************************
2018-07-04 02:50:10,810 p=14768 u=ashok |  ok: [deployserver-ashok] => (item=[u'mariadb', u'mariadb-server', u'mariadb-libs', u'MySQL-python', u'perl-DBD-MySQL'])
2018-07-04 02:50:10,815 p=14768 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL Python libraries are installed.] ************************************************************************************************************************************
2018-07-04 02:50:11,355 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:11,360 p=14768 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:50:11,379 p=14768 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:50:11,386 p=14768 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:50:11,400 p=14768 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:50:11,405 p=14768 u=ashok |  TASK [geerlingguy.mysql : Check if MySQL packages were installed.] *****************************************************************************************************************************************
2018-07-04 02:50:11,465 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:11,470 p=14768 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:50:11,510 p=14768 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/configure.yml for deployserver-ashok
2018-07-04 02:50:11,524 p=14768 u=ashok |  TASK [geerlingguy.mysql : Copy my.cnf global MySQL configuration.] *****************************************************************************************************************************************
2018-07-04 02:50:12,322 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:12,328 p=14768 u=ashok |  TASK [geerlingguy.mysql : Verify mysql include directory exists.] ******************************************************************************************************************************************
2018-07-04 02:50:12,343 p=14768 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:50:12,349 p=14768 u=ashok |  TASK [geerlingguy.mysql : Copy my.cnf override files into include directory.] ******************************************************************************************************************************
2018-07-04 02:50:12,369 p=14768 u=ashok |  TASK [geerlingguy.mysql : Create slow query log file (if configured).] *************************************************************************************************************************************
2018-07-04 02:50:12,381 p=14768 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:50:12,387 p=14768 u=ashok |  TASK [geerlingguy.mysql : Create datadir if it does not exist] *********************************************************************************************************************************************
2018-07-04 02:50:12,713 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:12,719 p=14768 u=ashok |  TASK [geerlingguy.mysql : Set ownership on slow query log file (if configured).] ***************************************************************************************************************************
2018-07-04 02:50:12,730 p=14768 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:50:12,736 p=14768 u=ashok |  TASK [geerlingguy.mysql : Create error log file (if configured).] ******************************************************************************************************************************************
2018-07-04 02:50:13,185 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:13,191 p=14768 u=ashok |  TASK [geerlingguy.mysql : Set ownership on error log file (if configured).] ********************************************************************************************************************************
2018-07-04 02:50:13,519 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:13,525 p=14768 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL is started and enabled on boot.] ************************************************************************************************************************************
2018-07-04 02:50:14,328 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:14,333 p=14768 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:50:14,376 p=14768 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/secure-installation.yml for deployserver-ashok
2018-07-04 02:50:14,395 p=14768 u=ashok |  TASK [geerlingguy.mysql : Get MySQL version.] **************************************************************************************************************************************************************
2018-07-04 02:50:14,923 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:14,928 p=14768 u=ashok |  TASK [geerlingguy.mysql : Ensure default user is present.] *************************************************************************************************************************************************
2018-07-04 02:50:14,942 p=14768 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:50:14,948 p=14768 u=ashok |  TASK [geerlingguy.mysql : Copy user-my.cnf file with password credentials.] ********************************************************************************************************************************
2018-07-04 02:50:14,961 p=14768 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:50:14,967 p=14768 u=ashok |  TASK [geerlingguy.mysql : Disallow root login remotely] ****************************************************************************************************************************************************
2018-07-04 02:50:15,326 p=14768 u=ashok |  ok: [deployserver-ashok] => (item=DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'))
2018-07-04 02:50:15,332 p=14768 u=ashok |  TASK [geerlingguy.mysql : Get list of hosts for the root user.] ********************************************************************************************************************************************
2018-07-04 02:50:15,348 p=14768 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:50:15,353 p=14768 u=ashok |  TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (5.7.x).] ******************************************************************************************************************
2018-07-04 02:50:15,373 p=14768 u=ashok |  TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (< 5.7.x).] ****************************************************************************************************************
2018-07-04 02:50:15,394 p=14768 u=ashok |  TASK [geerlingguy.mysql : Copy .my.cnf file with root password credentials.] *******************************************************************************************************************************
2018-07-04 02:50:15,440 p=14768 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 02:50:15,445 p=14768 u=ashok |  TASK [geerlingguy.mysql : Get list of hosts for the anonymous user.] ***************************************************************************************************************************************
2018-07-04 02:50:15,796 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:15,801 p=14768 u=ashok |  TASK [geerlingguy.mysql : Remove anonymous MySQL users.] ***************************************************************************************************************************************************
2018-07-04 02:50:15,819 p=14768 u=ashok |  TASK [geerlingguy.mysql : Remove MySQL test database.] *****************************************************************************************************************************************************
2018-07-04 02:50:16,261 p=14768 u=ashok |  ok: [deployserver-ashok]
2018-07-04 02:50:16,267 p=14768 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:50:16,287 p=14768 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/databases.yml for deployserver-ashok
2018-07-04 02:50:16,313 p=14768 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL databases are present.] *********************************************************************************************************************************************
2018-07-04 02:50:16,647 p=14768 u=ashok |  ok: [deployserver-ashok] => (item={u'name': u'appdb'})
2018-07-04 02:50:16,653 p=14768 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 02:50:16,676 p=14768 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/users.yml for deployserver-ashok
2018-07-04 02:50:16,709 p=14768 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL users are present.] *************************************************************************************************************************************************
2018-07-04 02:50:16,721 p=14768 u=ashok |  fatal: [deployserver-ashok]: FAILED! => {"failed": true, "msg": "Attempting to decrypt but no vault secrets found"}
2018-07-04 02:50:16,722 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:50:16,723 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:50:17,554 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 396
2018-07-04 02:50:17,557 p=14768 u=ashok |  PLAY RECAP *************************************************************************************************************************************************************************************************
2018-07-04 02:50:17,558 p=14768 u=ashok |  deployserver-ashok         : ok=31   changed=0    unreachable=0    failed=1   
2018-07-04 02:50:17,558 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:50:17,559 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:50:18,389 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:50:18,391 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:50:18,392 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:50:19,223 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:50:19,226 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:50:19,227 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:50:20,062 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:50:20,064 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:50:20,065 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:50:20,896 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:50:20,898 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:50:20,899 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:50:21,730 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:50:21,733 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:50:21,733 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:50:22,564 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 02:50:22,567 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 02:50:22,567 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 02:50:23,398 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 504
2018-07-04 03:07:42,351 p=2359 u=ashok |  PLAY [appservers] ******************************************************************************************************************************************************************************************
2018-07-04 03:07:42,356 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:07:42,357 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:07:43,193 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 346
2018-07-04 03:07:43,211 p=2359 u=ashok |  TASK [Gathering Facts] *************************************************************************************************************************************************************************************
2018-07-04 03:07:44,407 p=2359 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:07:44,413 p=2359 u=ashok |  TASK [appserver : ensure latest version of our app is deployed] ********************************************************************************************************************************************
2018-07-04 03:07:47,357 p=2359 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:07:47,359 p=2359 u=ashok |  PLAY RECAP *************************************************************************************************************************************************************************************************
2018-07-04 03:07:47,359 p=2359 u=ashok |  deployserver-ashok         : ok=2    changed=0    unreachable=0    failed=0   
2018-07-04 03:07:47,360 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:07:47,361 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:07:48,193 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 03:07:48,196 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:07:48,196 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:07:49,031 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 03:07:49,034 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:07:49,035 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:07:49,868 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 03:07:49,871 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:07:49,872 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:07:50,696 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 03:07:50,698 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:07:50,699 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:07:51,531 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 03:07:51,534 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:07:51,535 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:07:52,366 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 03:07:52,368 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:07:52,369 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:07:53,207 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 396
2018-07-04 03:09:07,206 p=2922 u=ashok |  ERROR! the playbook: dbservers could not be found
2018-07-04 03:09:11,652 p=2966 u=ashok |  PLAY [dbservers] *******************************************************************************************************************************************************************************************
2018-07-04 03:09:11,657 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:09:11,658 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:09:12,507 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 343
2018-07-04 03:09:12,527 p=2966 u=ashok |  TASK [Gathering Facts] *************************************************************************************************************************************************************************************
2018-07-04 03:09:13,706 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:13,711 p=2966 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 03:09:13,752 p=2966 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/variables.yml for deployserver-ashok
2018-07-04 03:09:13,760 p=2966 u=ashok |  TASK [geerlingguy.mysql : Include OS-specific variables.] **************************************************************************************************************************************************
2018-07-04 03:09:13,777 p=2966 u=ashok |  TASK [geerlingguy.mysql : Include OS-specific variables (RedHat).] *****************************************************************************************************************************************
2018-07-04 03:09:13,840 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:13,846 p=2966 u=ashok |  TASK [geerlingguy.mysql : Define mysql_packages.] **********************************************************************************************************************************************************
2018-07-04 03:09:13,906 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:13,911 p=2966 u=ashok |  TASK [geerlingguy.mysql : Define mysql_daemon.] ************************************************************************************************************************************************************
2018-07-04 03:09:13,972 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:13,977 p=2966 u=ashok |  TASK [geerlingguy.mysql : Define mysql_slow_query_log_file.] ***********************************************************************************************************************************************
2018-07-04 03:09:14,038 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:14,044 p=2966 u=ashok |  TASK [geerlingguy.mysql : Define mysql_log_error.] *********************************************************************************************************************************************************
2018-07-04 03:09:14,103 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:14,109 p=2966 u=ashok |  TASK [geerlingguy.mysql : Define mysql_syslog_tag.] ********************************************************************************************************************************************************
2018-07-04 03:09:14,169 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:14,175 p=2966 u=ashok |  TASK [geerlingguy.mysql : Define mysql_pid_file.] **********************************************************************************************************************************************************
2018-07-04 03:09:14,234 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:14,240 p=2966 u=ashok |  TASK [geerlingguy.mysql : Define mysql_config_file.] *******************************************************************************************************************************************************
2018-07-04 03:09:14,299 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:14,305 p=2966 u=ashok |  TASK [geerlingguy.mysql : Define mysql_config_include_dir.] ************************************************************************************************************************************************
2018-07-04 03:09:14,365 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:14,370 p=2966 u=ashok |  TASK [geerlingguy.mysql : Define mysql_socket.] ************************************************************************************************************************************************************
2018-07-04 03:09:14,431 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:14,436 p=2966 u=ashok |  TASK [geerlingguy.mysql : Define mysql_supports_innodb_large_prefix.] **************************************************************************************************************************************
2018-07-04 03:09:14,495 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:14,501 p=2966 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 03:09:14,526 p=2966 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/setup-RedHat.yml for deployserver-ashok
2018-07-04 03:09:14,536 p=2966 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL packages are installed.] ********************************************************************************************************************************************
2018-07-04 03:09:15,272 p=2966 u=ashok |  ok: [deployserver-ashok] => (item=[u'mariadb', u'mariadb-server', u'mariadb-libs', u'MySQL-python', u'perl-DBD-MySQL'])
2018-07-04 03:09:15,278 p=2966 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL Python libraries are installed.] ************************************************************************************************************************************
2018-07-04 03:09:15,815 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:15,820 p=2966 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 03:09:15,834 p=2966 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 03:09:15,839 p=2966 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 03:09:15,851 p=2966 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 03:09:15,857 p=2966 u=ashok |  TASK [geerlingguy.mysql : Check if MySQL packages were installed.] *****************************************************************************************************************************************
2018-07-04 03:09:15,914 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:15,920 p=2966 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 03:09:15,960 p=2966 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/configure.yml for deployserver-ashok
2018-07-04 03:09:15,973 p=2966 u=ashok |  TASK [geerlingguy.mysql : Copy my.cnf global MySQL configuration.] *****************************************************************************************************************************************
2018-07-04 03:09:16,876 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:16,883 p=2966 u=ashok |  TASK [geerlingguy.mysql : Verify mysql include directory exists.] ******************************************************************************************************************************************
2018-07-04 03:09:16,895 p=2966 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 03:09:16,901 p=2966 u=ashok |  TASK [geerlingguy.mysql : Copy my.cnf override files into include directory.] ******************************************************************************************************************************
2018-07-04 03:09:16,916 p=2966 u=ashok |  TASK [geerlingguy.mysql : Create slow query log file (if configured).] *************************************************************************************************************************************
2018-07-04 03:09:16,928 p=2966 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 03:09:16,933 p=2966 u=ashok |  TASK [geerlingguy.mysql : Create datadir if it does not exist] *********************************************************************************************************************************************
2018-07-04 03:09:17,252 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:17,257 p=2966 u=ashok |  TASK [geerlingguy.mysql : Set ownership on slow query log file (if configured).] ***************************************************************************************************************************
2018-07-04 03:09:17,267 p=2966 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 03:09:17,273 p=2966 u=ashok |  TASK [geerlingguy.mysql : Create error log file (if configured).] ******************************************************************************************************************************************
2018-07-04 03:09:17,715 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:17,721 p=2966 u=ashok |  TASK [geerlingguy.mysql : Set ownership on error log file (if configured).] ********************************************************************************************************************************
2018-07-04 03:09:18,043 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:18,049 p=2966 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL is started and enabled on boot.] ************************************************************************************************************************************
2018-07-04 03:09:18,880 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:18,886 p=2966 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 03:09:18,929 p=2966 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/secure-installation.yml for deployserver-ashok
2018-07-04 03:09:18,948 p=2966 u=ashok |  TASK [geerlingguy.mysql : Get MySQL version.] **************************************************************************************************************************************************************
2018-07-04 03:09:19,300 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:19,306 p=2966 u=ashok |  TASK [geerlingguy.mysql : Ensure default user is present.] *************************************************************************************************************************************************
2018-07-04 03:09:19,319 p=2966 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 03:09:19,325 p=2966 u=ashok |  TASK [geerlingguy.mysql : Copy user-my.cnf file with password credentials.] ********************************************************************************************************************************
2018-07-04 03:09:19,338 p=2966 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 03:09:19,344 p=2966 u=ashok |  TASK [geerlingguy.mysql : Disallow root login remotely] ****************************************************************************************************************************************************
2018-07-04 03:09:19,713 p=2966 u=ashok |  ok: [deployserver-ashok] => (item=DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'))
2018-07-04 03:09:19,718 p=2966 u=ashok |  TASK [geerlingguy.mysql : Get list of hosts for the root user.] ********************************************************************************************************************************************
2018-07-04 03:09:19,732 p=2966 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 03:09:19,737 p=2966 u=ashok |  TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (5.7.x).] ******************************************************************************************************************
2018-07-04 03:09:19,755 p=2966 u=ashok |  TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (< 5.7.x).] ****************************************************************************************************************
2018-07-04 03:09:19,772 p=2966 u=ashok |  TASK [geerlingguy.mysql : Copy .my.cnf file with root password credentials.] *******************************************************************************************************************************
2018-07-04 03:09:19,788 p=2966 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 03:09:19,794 p=2966 u=ashok |  TASK [geerlingguy.mysql : Get list of hosts for the anonymous user.] ***************************************************************************************************************************************
2018-07-04 03:09:20,150 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:20,155 p=2966 u=ashok |  TASK [geerlingguy.mysql : Remove anonymous MySQL users.] ***************************************************************************************************************************************************
2018-07-04 03:09:20,173 p=2966 u=ashok |  TASK [geerlingguy.mysql : Remove MySQL test database.] *****************************************************************************************************************************************************
2018-07-04 03:09:20,605 p=2966 u=ashok |  ok: [deployserver-ashok]
2018-07-04 03:09:20,611 p=2966 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 03:09:20,630 p=2966 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/databases.yml for deployserver-ashok
2018-07-04 03:09:20,656 p=2966 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL databases are present.] *********************************************************************************************************************************************
2018-07-04 03:09:21,001 p=2966 u=ashok |  ok: [deployserver-ashok] => (item={u'name': u'appdb'})
2018-07-04 03:09:21,007 p=2966 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 03:09:21,027 p=2966 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/users.yml for deployserver-ashok
2018-07-04 03:09:21,061 p=2966 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL users are present.] *************************************************************************************************************************************************
2018-07-04 03:09:21,074 p=2966 u=ashok |  fatal: [deployserver-ashok]: FAILED! => {"failed": true, "msg": "Attempting to decrypt but no vault secrets found"}
2018-07-04 03:09:21,074 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:09:21,076 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:09:21,909 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 396
2018-07-04 03:09:21,912 p=2966 u=ashok |  PLAY RECAP *************************************************************************************************************************************************************************************************
2018-07-04 03:09:21,912 p=2966 u=ashok |  deployserver-ashok         : ok=31   changed=0    unreachable=0    failed=1   
2018-07-04 03:09:21,912 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:09:21,913 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:09:22,737 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 03:09:22,740 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:09:22,740 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:09:23,571 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 03:09:23,574 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:09:23,575 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:09:24,396 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 03:09:24,399 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:09:24,400 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:09:25,231 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 03:09:25,233 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:09:25,234 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:09:26,057 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 03:09:26,060 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:09:26,060 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:09:26,892 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 03:09:26,894 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 03:09:26,895 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 03:09:27,726 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 504
2018-07-04 04:21:05,004 p=31917 u=ashok |  PLAY [dbservers] *******************************************************************************************************************************************************************************************
2018-07-04 04:21:05,009 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 04:21:05,010 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 04:21:05,848 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 343
2018-07-04 04:21:05,868 p=31917 u=ashok |  TASK [Gathering Facts] *************************************************************************************************************************************************************************************
2018-07-04 04:21:06,965 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:06,971 p=31917 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 04:21:07,011 p=31917 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/variables.yml for deployserver-ashok
2018-07-04 04:21:07,020 p=31917 u=ashok |  TASK [geerlingguy.mysql : Include OS-specific variables.] **************************************************************************************************************************************************
2018-07-04 04:21:07,037 p=31917 u=ashok |  TASK [geerlingguy.mysql : Include OS-specific variables (RedHat).] *****************************************************************************************************************************************
2018-07-04 04:21:07,102 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:07,108 p=31917 u=ashok |  TASK [geerlingguy.mysql : Define mysql_packages.] **********************************************************************************************************************************************************
2018-07-04 04:21:07,172 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:07,177 p=31917 u=ashok |  TASK [geerlingguy.mysql : Define mysql_daemon.] ************************************************************************************************************************************************************
2018-07-04 04:21:07,240 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:07,245 p=31917 u=ashok |  TASK [geerlingguy.mysql : Define mysql_slow_query_log_file.] ***********************************************************************************************************************************************
2018-07-04 04:21:07,310 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:07,315 p=31917 u=ashok |  TASK [geerlingguy.mysql : Define mysql_log_error.] *********************************************************************************************************************************************************
2018-07-04 04:21:07,379 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:07,384 p=31917 u=ashok |  TASK [geerlingguy.mysql : Define mysql_syslog_tag.] ********************************************************************************************************************************************************
2018-07-04 04:21:07,448 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:07,453 p=31917 u=ashok |  TASK [geerlingguy.mysql : Define mysql_pid_file.] **********************************************************************************************************************************************************
2018-07-04 04:21:07,516 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:07,522 p=31917 u=ashok |  TASK [geerlingguy.mysql : Define mysql_config_file.] *******************************************************************************************************************************************************
2018-07-04 04:21:07,584 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:07,590 p=31917 u=ashok |  TASK [geerlingguy.mysql : Define mysql_config_include_dir.] ************************************************************************************************************************************************
2018-07-04 04:21:07,651 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:07,657 p=31917 u=ashok |  TASK [geerlingguy.mysql : Define mysql_socket.] ************************************************************************************************************************************************************
2018-07-04 04:21:07,719 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:07,725 p=31917 u=ashok |  TASK [geerlingguy.mysql : Define mysql_supports_innodb_large_prefix.] **************************************************************************************************************************************
2018-07-04 04:21:07,787 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:07,792 p=31917 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 04:21:07,819 p=31917 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/setup-RedHat.yml for deployserver-ashok
2018-07-04 04:21:07,830 p=31917 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL packages are installed.] ********************************************************************************************************************************************
2018-07-04 04:21:08,583 p=31917 u=ashok |  ok: [deployserver-ashok] => (item=[u'mariadb', u'mariadb-server', u'mariadb-libs', u'MySQL-python', u'perl-DBD-MySQL'])
2018-07-04 04:21:08,589 p=31917 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL Python libraries are installed.] ************************************************************************************************************************************
2018-07-04 04:21:09,127 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:09,134 p=31917 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 04:21:09,147 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:09,152 p=31917 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 04:21:09,166 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:09,172 p=31917 u=ashok |  TASK [geerlingguy.mysql : Check if MySQL packages were installed.] *****************************************************************************************************************************************
2018-07-04 04:21:09,234 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:09,239 p=31917 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 04:21:09,281 p=31917 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/configure.yml for deployserver-ashok
2018-07-04 04:21:09,295 p=31917 u=ashok |  TASK [geerlingguy.mysql : Copy my.cnf global MySQL configuration.] *****************************************************************************************************************************************
2018-07-04 04:21:10,093 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:10,099 p=31917 u=ashok |  TASK [geerlingguy.mysql : Verify mysql include directory exists.] ******************************************************************************************************************************************
2018-07-04 04:21:10,112 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:10,118 p=31917 u=ashok |  TASK [geerlingguy.mysql : Copy my.cnf override files into include directory.] ******************************************************************************************************************************
2018-07-04 04:21:10,135 p=31917 u=ashok |  TASK [geerlingguy.mysql : Create slow query log file (if configured).] *************************************************************************************************************************************
2018-07-04 04:21:10,145 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:10,150 p=31917 u=ashok |  TASK [geerlingguy.mysql : Create datadir if it does not exist] *********************************************************************************************************************************************
2018-07-04 04:21:10,479 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:10,485 p=31917 u=ashok |  TASK [geerlingguy.mysql : Set ownership on slow query log file (if configured).] ***************************************************************************************************************************
2018-07-04 04:21:10,496 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:10,502 p=31917 u=ashok |  TASK [geerlingguy.mysql : Create error log file (if configured).] ******************************************************************************************************************************************
2018-07-04 04:21:10,955 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:10,960 p=31917 u=ashok |  TASK [geerlingguy.mysql : Set ownership on error log file (if configured).] ********************************************************************************************************************************
2018-07-04 04:21:11,289 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:11,295 p=31917 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL is started and enabled on boot.] ************************************************************************************************************************************
2018-07-04 04:21:12,098 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:12,104 p=31917 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 04:21:12,147 p=31917 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/secure-installation.yml for deployserver-ashok
2018-07-04 04:21:12,171 p=31917 u=ashok |  TASK [geerlingguy.mysql : Get MySQL version.] **************************************************************************************************************************************************************
2018-07-04 04:21:12,530 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:12,536 p=31917 u=ashok |  TASK [geerlingguy.mysql : Ensure default user is present.] *************************************************************************************************************************************************
2018-07-04 04:21:12,552 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:12,558 p=31917 u=ashok |  TASK [geerlingguy.mysql : Copy user-my.cnf file with password credentials.] ********************************************************************************************************************************
2018-07-04 04:21:12,571 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:12,577 p=31917 u=ashok |  TASK [geerlingguy.mysql : Disallow root login remotely] ****************************************************************************************************************************************************
2018-07-04 04:21:12,941 p=31917 u=ashok |  ok: [deployserver-ashok] => (item=DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'))
2018-07-04 04:21:12,946 p=31917 u=ashok |  TASK [geerlingguy.mysql : Get list of hosts for the root user.] ********************************************************************************************************************************************
2018-07-04 04:21:12,960 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:12,965 p=31917 u=ashok |  TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (5.7.x).] ******************************************************************************************************************
2018-07-04 04:21:12,983 p=31917 u=ashok |  TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (< 5.7.x).] ****************************************************************************************************************
2018-07-04 04:21:13,000 p=31917 u=ashok |  TASK [geerlingguy.mysql : Copy .my.cnf file with root password credentials.] *******************************************************************************************************************************
2018-07-04 04:21:13,014 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:13,019 p=31917 u=ashok |  TASK [geerlingguy.mysql : Get list of hosts for the anonymous user.] ***************************************************************************************************************************************
2018-07-04 04:21:13,376 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:13,382 p=31917 u=ashok |  TASK [geerlingguy.mysql : Remove anonymous MySQL users.] ***************************************************************************************************************************************************
2018-07-04 04:21:13,435 p=31917 u=ashok |  TASK [geerlingguy.mysql : Remove MySQL test database.] *****************************************************************************************************************************************************
2018-07-04 04:21:13,926 p=31917 u=ashok |  ok: [deployserver-ashok]
2018-07-04 04:21:13,932 p=31917 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 04:21:13,951 p=31917 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/databases.yml for deployserver-ashok
2018-07-04 04:21:13,977 p=31917 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL databases are present.] *********************************************************************************************************************************************
2018-07-04 04:21:14,318 p=31917 u=ashok |  ok: [deployserver-ashok] => (item={u'name': u'appdb'})
2018-07-04 04:21:14,324 p=31917 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 04:21:14,345 p=31917 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/users.yml for deployserver-ashok
2018-07-04 04:21:14,379 p=31917 u=ashok |  TASK [geerlingguy.mysql : Ensure MySQL users are present.] *************************************************************************************************************************************************
2018-07-04 04:21:14,878 p=31917 u=ashok |  changed: [deployserver-ashok] => (item=(censored due to no_log))
2018-07-04 04:21:14,879 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 04:21:14,880 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 04:21:15,704 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 365
2018-07-04 04:21:15,711 p=31917 u=ashok |  TASK [geerlingguy.mysql : include_tasks] *******************************************************************************************************************************************************************
2018-07-04 04:21:15,742 p=31917 u=ashok |  included: /home/ashok/development/ansible2/roles/geerlingguy.mysql/tasks/replication.yml for deployserver-ashok
2018-07-04 04:21:15,785 p=31917 u=ashok |  TASK [geerlingguy.mysql : Ensure replication user exists on master.] ***************************************************************************************************************************************
2018-07-04 04:21:15,800 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:15,805 p=31917 u=ashok |  TASK [geerlingguy.mysql : Check slave replication status.] *************************************************************************************************************************************************
2018-07-04 04:21:15,823 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:15,832 p=31917 u=ashok |  TASK [geerlingguy.mysql : Check master replication status.] ************************************************************************************************************************************************
2018-07-04 04:21:15,856 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:15,861 p=31917 u=ashok |  TASK [geerlingguy.mysql : Configure replication on the slave.] *********************************************************************************************************************************************
2018-07-04 04:21:15,878 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:15,883 p=31917 u=ashok |  TASK [geerlingguy.mysql : Start replication.] **************************************************************************************************************************************************************
2018-07-04 04:21:15,899 p=31917 u=ashok |  skipping: [deployserver-ashok]
2018-07-04 04:21:15,901 p=31917 u=ashok |  PLAY RECAP *************************************************************************************************************************************************************************************************
2018-07-04 04:21:15,901 p=31917 u=ashok |  deployserver-ashok         : ok=33   changed=1    unreachable=0    failed=0   
2018-07-04 04:21:15,902 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 04:21:15,903 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 04:21:16,740 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 04:21:16,742 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 04:21:16,743 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 04:21:17,560 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 04:21:17,562 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 04:21:17,563 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 04:21:18,394 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 04:21:18,397 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 04:21:18,398 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 04:21:19,216 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 04:21:19,219 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 04:21:19,219 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 04:21:20,042 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 04:21:20,045 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 04:21:20,046 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 04:21:20,924 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/series?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 16
2018-07-04 04:21:20,927 urllib3.util.retry Converted retries value: 3 -> Retry(total=3, connect=None, read=None, redirect=None, status=None)
2018-07-04 04:21:20,927 urllib3.connectionpool Starting new HTTPS connection (1): app.datadoghq.com
2018-07-04 04:21:21,769 urllib3.connectionpool https://app.datadoghq.com:443 "POST /api/v1/events?api_key=ee678143fa7f46b59d470fc3bb879aa6 HTTP/1.1" 202 394
